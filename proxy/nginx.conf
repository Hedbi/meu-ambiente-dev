events {
    worker_connections  1024;
}

http {
    # Define o tipo de log.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Mapeia os serviços.
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:3000;
    }

    server {
        listen 80;

        # Roteamento para a API
        location /api/ {
            # Remove o prefixo "/api/" da URL antes de encaminhar.
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o frontend (padrão)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}